#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

from thrift.Thrift import TType, TMessageType, TException, TApplicationException
from ttypes import *

TMetricDefs = {
  "admission-controller.agg-mem-reserved.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Aggregate Mem Reserved",
    "key" : "admission-controller.agg-mem-reserved.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Aggregate Mem Reserved",
    "units" :     7,
  }),
  "admission-controller.agg-num-queued.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Aggregate Queue Size",
    "key" : "admission-controller.agg-num-queued.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Aggregate Queue Size",
    "units" :     7,
  }),
  "admission-controller.agg-num-running.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Aggregate Num Running",
    "key" : "admission-controller.agg-num-running.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Aggregate Num Running",
    "units" :     7,
  }),
  "admission-controller.local-backend-mem-reserved.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Mem Reserved by the backend coordinator",
    "key" : "admission-controller.local-backend-mem-reserved.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Coordinator Backend Mem Reserved",
    "units" :     7,
  }),
  "admission-controller.local-backend-mem-usage.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Coordinator Backend Mem Usage",
    "key" : "admission-controller.local-backend-mem-usage.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Coordinator Backend Mem Usage",
    "units" :     7,
  }),
  "admission-controller.local-mem-admitted.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Local Mem Admitted",
    "key" : "admission-controller.local-mem-admitted.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Local Mem Admitted",
    "units" :     7,
  }),
  "admission-controller.local-num-admitted-running.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Coordinator Backend Num Running",
    "key" : "admission-controller.local-num-admitted-running.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Coordinator Backend Num Running",
    "units" :     7,
  }),
  "admission-controller.local-num-queued.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Queue Size on the coordinator",
    "key" : "admission-controller.local-num-queued.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Coordinator Backend Queue Size",
    "units" :     7,
  }),
  "admission-controller.pool-max-mem-resources.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Configured Max Mem Resources",
    "key" : "admission-controller.pool-max-mem-resources.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Configured Max Mem Resources",
    "units" :     7,
  }),
  "admission-controller.pool-max-queued.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Configured Max Queued",
    "key" : "admission-controller.pool-max-queued.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Configured Max Queued",
    "units" :     7,
  }),
  "admission-controller.pool-max-requests.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Configured Max Requests",
    "key" : "admission-controller.pool-max-requests.$0",
    "kind" :     0,
    "label" : "Resource Pool $0 Configured Max Requests",
    "units" :     7,
  }),
  "admission-controller.time-in-queue-ms.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Resource Pool $0 Time in Queue",
    "key" : "admission-controller.time-in-queue-ms.$0",
    "kind" :     1,
    "label" : "Resource Pool $0 Time in Queue",
    "units" :     8,
  }),
  "admission-controller.total-admitted.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Total number of requests admitted to pool $0",
    "key" : "admission-controller.total-admitted.$0",
    "kind" :     1,
    "label" : "Resource Pool $0 Total Admitted",
    "units" :     0,
  }),
  "admission-controller.total-dequeued.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Total number of requests dequeued in pool $0",
    "key" : "admission-controller.total-dequeued.$0",
    "kind" :     1,
    "label" : "Resource Pool $0 Total Dequeued",
    "units" :     0,
  }),
  "admission-controller.total-queued.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Total number of requests queued in pool $0",
    "key" : "admission-controller.total-queued.$0",
    "kind" :     1,
    "label" : "Resource Pool $0 Total Queued",
    "units" :     0,
  }),
  "admission-controller.total-rejected.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Total number of requests rejected in pool $0",
    "key" : "admission-controller.total-rejected.$0",
    "kind" :     1,
    "label" : "Resource Pool $0 Total Rejected",
    "units" :     0,
  }),
  "admission-controller.total-released.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Total number of requests that have completed and released resources in pool $0",
    "key" : "admission-controller.total-released.$0",
    "kind" :     1,
    "label" : "Resource Pool $0 Total Released",
    "units" :     0,
  }),
  "admission-controller.total-timed-out.$0" : TMetricDef(**{
    "contexts" : [
      "RESOURCE_POOL",
    ],
    "description" : "Total number of requests timed out waiting while queued in pool $0",
    "key" : "admission-controller.total-timed-out.$0",
    "kind" :     1,
    "label" : "Resource Pool $0 Total Timed Out",
    "units" :     0,
  }),
  "buffer-pool.clean-page-bytes" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total bytes of clean page memory cached in the buffer pool.",
    "key" : "buffer-pool.clean-page-bytes",
    "kind" :     0,
    "label" : "Buffer Pool Clean Page Bytes.",
    "units" :     3,
  }),
  "buffer-pool.clean-pages" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of clean pages cached in the buffer pool.",
    "key" : "buffer-pool.clean-pages",
    "kind" :     0,
    "label" : "Buffer Pool Clean Pages.",
    "units" :     7,
  }),
  "buffer-pool.clean-pages-limit" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Limit on number of clean pages cached in the buffer pool.",
    "key" : "buffer-pool.clean-pages-limit",
    "kind" :     0,
    "label" : "Buffer Pool Clean Pages Limit.",
    "units" :     3,
  }),
  "buffer-pool.free-buffer-bytes" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total bytes of free buffer memory cached in the buffer pool.",
    "key" : "buffer-pool.free-buffer-bytes",
    "kind" :     0,
    "label" : "Buffer Pool Free Buffer Bytes.",
    "units" :     3,
  }),
  "buffer-pool.free-buffers" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of free buffers cached in the buffer pool.",
    "key" : "buffer-pool.free-buffers",
    "kind" :     0,
    "label" : "Buffer Pool Free Buffers.",
    "units" :     7,
  }),
  "buffer-pool.limit" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Maximum allowed bytes allocated by the buffer pool.",
    "key" : "buffer-pool.limit",
    "kind" :     0,
    "label" : "Buffer Pool Allocated Memory Limit.",
    "units" :     3,
  }),
  "buffer-pool.reserved" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total bytes of buffers reserved by Impala subsystems",
    "key" : "buffer-pool.reserved",
    "kind" :     0,
    "label" : "Buffer Pool Total Reserved Memory.",
    "units" :     3,
  }),
  "buffer-pool.system-allocated" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total buffer memory currently allocated by the buffer pool.",
    "key" : "buffer-pool.system-allocated",
    "kind" :     0,
    "label" : "Buffer Pool Total Allocated Memory.",
    "units" :     3,
  }),
  "buffer-pool.unused-reservation-bytes" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total bytes of buffer reservations by Impala subsystems that are currently unused",
    "key" : "buffer-pool.unused-reservation-bytes",
    "kind" :     0,
    "label" : "Buffer Pool Unused Reservation Bytes.",
    "units" :     3,
  }),
  "catalog-server.topic-processing-time-s" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
    ],
    "description" : "Catalog Server Topic Processing Time",
    "key" : "catalog-server.topic-processing-time-s",
    "kind" :     3,
    "label" : "Catalog Server Topic Processing Time",
    "units" :     9,
  }),
  "catalog.num-databases" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of databases in the catalog.",
    "key" : "catalog.num-databases",
    "kind" :     0,
    "label" : "Databases",
    "units" :     7,
  }),
  "catalog.num-tables" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of tables in the catalog.",
    "key" : "catalog.num-tables",
    "kind" :     0,
    "label" : "Tables",
    "units" :     7,
  }),
  "catalog.ready" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Indicates if the catalog is ready.",
    "key" : "catalog.ready",
    "kind" :     2,
    "label" : "Catalog Ready",
    "units" :     7,
  }),
  "catalog.server.client-cache.clients-in-use" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of clients currently in use by the Catalog Server client cache.",
    "key" : "catalog.server.client-cache.clients-in-use",
    "kind" :     0,
    "label" : "Catalog Server Client Cache Clients In Use",
    "units" :     7,
  }),
  "catalog.server.client-cache.total-clients" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of clients in the Catalog Server client cache.",
    "key" : "catalog.server.client-cache.total-clients",
    "kind" :     0,
    "label" : "Catalog Server Client Cache Total Clients",
    "units" :     7,
  }),
  "catalog.version" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
    ],
    "description" : "The full version string of the Catalog Server.",
    "key" : "catalog.version",
    "kind" :     2,
    "label" : "Catalog Version",
    "units" :     7,
  }),
  "cgroups-mgr.active-cgroups" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of cgroups currently registered with the Cgroups Manager",
    "key" : "cgroups-mgr.active-cgroups",
    "kind" :     0,
    "label" : "Cgroups Manager Active Cgroups",
    "units" :     0,
  }),
  "external-data-source.class-cache.hits" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of cache hits in the External Data Source Class Cache",
    "key" : "external-data-source.class-cache.hits",
    "kind" :     1,
    "label" : "External Data Source Class Cache Hits",
    "units" :     0,
  }),
  "external-data-source.class-cache.misses" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of cache misses in the External Data Source Class Cache",
    "key" : "external-data-source.class-cache.misses",
    "kind" :     1,
    "label" : "External Data Source Class Cache Misses",
    "units" :     0,
  }),
  "impala-server.backends.client-cache.clients-in-use" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of active Impala Backend clients. These clients are for communication with other Impala Daemons.",
    "key" : "impala-server.backends.client-cache.clients-in-use",
    "kind" :     0,
    "label" : "Impala Backend Active Clients",
    "units" :     7,
  }),
  "impala-server.backends.client-cache.total-clients" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of Impala Backend clients in this Impala Daemon's client cache. These clients are for communication with other Impala Daemons.",
    "key" : "impala-server.backends.client-cache.total-clients",
    "kind" :     0,
    "label" : "Impala Backend Total Clients",
    "units" :     7,
  }),
  "impala-server.ddl-durations-ms" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Distribution of DDL operation latencies",
    "key" : "impala-server.ddl-durations-ms",
    "kind" :     5,
    "label" : "DDL latency distribution",
    "units" :     8,
  }),
  "impala-server.hash-table.total-bytes" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The current size of all allocated hash tables.",
    "key" : "impala-server.hash-table.total-bytes",
    "kind" :     0,
    "label" : "Hash Tables Size",
    "units" :     3,
  }),
  "impala-server.hedged-read-ops" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of hedged reads attempted over the life of the process",
    "key" : "impala-server.hedged-read-ops",
    "kind" :     1,
    "label" : "Hedged Read Operations",
    "units" :     0,
  }),
  "impala-server.hedged-read-ops-win" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of times hedged reads were faster than regular read operations",
    "key" : "impala-server.hedged-read-ops-win",
    "kind" :     1,
    "label" : "Hedged Read Operations Won",
    "units" :     0,
  }),
  "impala-server.io-mgr.bytes-read" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of bytes read by the IO manager.",
    "key" : "impala-server.io-mgr.bytes-read",
    "kind" :     1,
    "label" : "Impala Server Io Mgr Bytes Read",
    "units" :     3,
  }),
  "impala-server.io-mgr.bytes-written" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of bytes written to disk by the IO manager.",
    "key" : "impala-server.io-mgr.bytes-written",
    "kind" :     1,
    "label" : "Impala Server Io Mgr Bytes Written",
    "units" :     3,
  }),
  "impala-server.io-mgr.cached-bytes-read" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of cached bytes read by the IO manager.",
    "key" : "impala-server.io-mgr.cached-bytes-read",
    "kind" :     1,
    "label" : "Impala Server Io Mgr Cached Bytes Read",
    "units" :     3,
  }),
  "impala-server.io-mgr.local-bytes-read" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of local bytes read by the IO manager.",
    "key" : "impala-server.io-mgr.local-bytes-read",
    "kind" :     1,
    "label" : "Impala Server Io Mgr Local Bytes Read",
    "units" :     3,
  }),
  "impala-server.io-mgr.num-buffers" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of allocated IO buffers. IO buffers are shared by all queries.",
    "key" : "impala-server.io-mgr.num-buffers",
    "kind" :     0,
    "label" : "IO Buffers",
    "units" :     7,
  }),
  "impala-server.io-mgr.num-open-files" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The current number of files opened by the IO Manager",
    "key" : "impala-server.io-mgr.num-open-files",
    "kind" :     0,
    "label" : "Open Files",
    "units" :     7,
  }),
  "impala-server.io-mgr.num-unused-buffers" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of unused IO buffers. IO buffers are shared by all queries.",
    "key" : "impala-server.io-mgr.num-unused-buffers",
    "kind" :     0,
    "label" : "Unused IO Buffers",
    "units" :     7,
  }),
  "impala-server.io-mgr.short-circuit-bytes-read" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of short-circuit bytes read by the IO manager.",
    "key" : "impala-server.io-mgr.short-circuit-bytes-read",
    "kind" :     1,
    "label" : "Impala Server Io Mgr Short Circuit Bytes Read",
    "units" :     3,
  }),
  "impala-server.io-mgr.total-bytes" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of bytes used by IO buffers (used and unused).",
    "key" : "impala-server.io-mgr.total-bytes",
    "kind" :     0,
    "label" : "IO Buffers Total Size",
    "units" :     3,
  }),
  "impala-server.io.mgr.cached-file-handles-hit-count" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of cache hits for cached HDFS file handles",
    "key" : "impala-server.io.mgr.cached-file-handles-hit-count",
    "kind" :     0,
    "label" : "HDFS cached file handles hit count",
    "units" :     7,
  }),
  "impala-server.io.mgr.cached-file-handles-hit-ratio" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "HDFS file handle cache hit ratio, between 0 and 1, where 1 means all reads were served from cached file handles.",
    "key" : "impala-server.io.mgr.cached-file-handles-hit-ratio",
    "kind" :     3,
    "label" : "HDFS file handle cache hit ratio",
    "units" :     7,
  }),
  "impala-server.io.mgr.cached-file-handles-miss-count" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of cache misses for cached HDFS file handles",
    "key" : "impala-server.io.mgr.cached-file-handles-miss-count",
    "kind" :     0,
    "label" : "HDFS cached file handles miss count",
    "units" :     7,
  }),
  "impala-server.io.mgr.num-cached-file-handles" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of currently cached HDFS file handles in the IO manager.",
    "key" : "impala-server.io.mgr.num-cached-file-handles",
    "kind" :     0,
    "label" : "Number of cached HDFS file handles",
    "units" :     7,
  }),
  "impala-server.io.mgr.num-file-handles-outstanding" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of HDFS file handles that are currently in use by readers.",
    "key" : "impala-server.io.mgr.num-file-handles-outstanding",
    "kind" :     0,
    "label" : "Number of outstanding HDFS file handles",
    "units" :     7,
  }),
  "impala-server.mem-pool.total-bytes" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The current size of the memory pool shared by all queries",
    "key" : "impala-server.mem-pool.total-bytes",
    "kind" :     0,
    "label" : "Memory Pool Size",
    "units" :     3,
  }),
  "impala-server.num-files-open-for-insert" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of HDFS files currently open for writing.",
    "key" : "impala-server.num-files-open-for-insert",
    "kind" :     0,
    "label" : "Files Open For Insert",
    "units" :     7,
  }),
  "impala-server.num-fragments" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of query fragments processed over the life of the process.",
    "key" : "impala-server.num-fragments",
    "kind" :     1,
    "label" : "Query Fragments",
    "units" :     0,
  }),
  "impala-server.num-fragments-in-flight" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of query fragments currently executing.",
    "key" : "impala-server.num-fragments-in-flight",
    "kind" :     0,
    "label" : "Query Fragments",
    "units" :     0,
  }),
  "impala-server.num-open-beeswax-sessions" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of open Beeswax sessions.",
    "key" : "impala-server.num-open-beeswax-sessions",
    "kind" :     0,
    "label" : "Beeswax Sessions",
    "units" :     7,
  }),
  "impala-server.num-open-hiveserver2-sessions" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of open HiveServer2 sessions.",
    "key" : "impala-server.num-open-hiveserver2-sessions",
    "kind" :     0,
    "label" : "HiveServer2 Sessions",
    "units" :     7,
  }),
  "impala-server.num-queries" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of queries processed over the life of the process",
    "key" : "impala-server.num-queries",
    "kind" :     1,
    "label" : "Queries",
    "units" :     0,
  }),
  "impala-server.num-queries-expired" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of queries expired due to inactivity.",
    "key" : "impala-server.num-queries-expired",
    "kind" :     1,
    "label" : "Queries Expired",
    "units" :     0,
  }),
  "impala-server.num-queries-registered" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of queries registered on this Impala server instance. Includes queries that are in flight and waiting to be closed",
    "key" : "impala-server.num-queries-registered",
    "kind" :     0,
    "label" : "Queries Registered",
    "units" :     0,
  }),
  "impala-server.num-queries-spilled" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of queries for which any operator spilled.",
    "key" : "impala-server.num-queries-spilled",
    "kind" :     1,
    "label" : "Impala Server Num Queries Spilled",
    "units" :     0,
  }),
  "impala-server.num-sessions-expired" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of sessions expired due to inactivity.",
    "key" : "impala-server.num-sessions-expired",
    "kind" :     1,
    "label" : "Sessions Expired",
    "units" :     0,
  }),
  "impala-server.query-durations-ms" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Distribution of query latencies",
    "key" : "impala-server.query-durations-ms",
    "kind" :     5,
    "label" : "Query latency distribution",
    "units" :     8,
  }),
  "impala-server.ready" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Indicates if the Impala Server is ready.",
    "key" : "impala-server.ready",
    "kind" :     2,
    "label" : "Impala Server Ready",
    "units" :     7,
  }),
  "impala-server.resultset-cache.total-bytes" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of bytes consumed for rows cached to support HS2 FETCH_FIRST.",
    "key" : "impala-server.resultset-cache.total-bytes",
    "kind" :     0,
    "label" : "Impala Server Resultset Cache Total Bytes",
    "units" :     7,
  }),
  "impala-server.resultset-cache.total-num-rows" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of rows cached to support HS2 FETCH_FIRST.",
    "key" : "impala-server.resultset-cache.total-num-rows",
    "kind" :     0,
    "label" : "Impala Server Resultset Cache Total Num Rows",
    "units" :     7,
  }),
  "impala-server.scan-ranges.num-missing-volume-id" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of scan ranges read over the life of the process that did not have volume metadata",
    "key" : "impala-server.scan-ranges.num-missing-volume-id",
    "kind" :     1,
    "label" : "Scan Ranges Missing Volume Information",
    "units" :     0,
  }),
  "impala-server.scan-ranges.total" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of scan ranges read over the life of the process",
    "key" : "impala-server.scan-ranges.total",
    "kind" :     1,
    "label" : "Scan Ranges",
    "units" :     0,
  }),
  "impala-server.version" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The full version string of the Impala Server.",
    "key" : "impala-server.version",
    "kind" :     2,
    "label" : "Impala Server Version",
    "units" :     7,
  }),
  "impala.thrift-server.CatalogService.connection-setup-queue-size" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of connections to the Catalog Service that have been accepted and are waiting to be setup.",
    "key" : "impala.thrift-server.CatalogService.connection-setup-queue-size",
    "kind" :     0,
    "label" : "Catalog Service Connections Queued for Setup",
    "units" :     7,
  }),
  "impala.thrift-server.CatalogService.connections-in-use" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
    ],
    "description" : "The number of active catalog service connections to this Catalog Server.",
    "key" : "impala.thrift-server.CatalogService.connections-in-use",
    "kind" :     0,
    "label" : "Catalog Service Active Connections",
    "units" :     7,
  }),
  "impala.thrift-server.CatalogService.total-connections" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
    ],
    "description" : "The total number of connections made to this Catalog Server's catalog service  over its lifetime.",
    "key" : "impala.thrift-server.CatalogService.total-connections",
    "kind" :     1,
    "label" : "Catalog Service Total Connections",
    "units" :     0,
  }),
  "impala.thrift-server.StatestoreService.connection-setup-queue-size" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of connections to the Statestore Service that have been accepted and are waiting to be setup.",
    "key" : "impala.thrift-server.StatestoreService.connection-setup-queue-size",
    "kind" :     0,
    "label" : "Statestore Service Connections Queued for Setup",
    "units" :     7,
  }),
  "impala.thrift-server.StatestoreService.connections-in-use" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The number of active connections to this StateStore's StateStore service.",
    "key" : "impala.thrift-server.StatestoreService.connections-in-use",
    "kind" :     0,
    "label" : "StateStore Service Active Connections",
    "units" :     7,
  }),
  "impala.thrift-server.StatestoreService.total-connections" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The total number of connections made to this StateStore's StateStore service over its lifetime.",
    "key" : "impala.thrift-server.StatestoreService.total-connections",
    "kind" :     1,
    "label" : "StateStore Service Connections",
    "units" :     0,
  }),
  "impala.thrift-server.backend.connection-setup-queue-size" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of connections to the Impala Backend Server that have been accepted and are waiting to be setup.",
    "key" : "impala.thrift-server.backend.connection-setup-queue-size",
    "kind" :     0,
    "label" : "Impala Backend Server Connections Queued for Setup",
    "units" :     7,
  }),
  "impala.thrift-server.backend.connections-in-use" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of active Impala Backend client connections to this Impala Daemon.",
    "key" : "impala.thrift-server.backend.connections-in-use",
    "kind" :     0,
    "label" : "Impala Backend Server Active Connections",
    "units" :     7,
  }),
  "impala.thrift-server.backend.total-connections" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of Impala Backend client connections made to this Impala Daemon over its lifetime.",
    "key" : "impala.thrift-server.backend.total-connections",
    "kind" :     1,
    "label" : "Impala Backend Server Connections",
    "units" :     0,
  }),
  "impala.thrift-server.beeswax-frontend.connection-setup-queue-size" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of Beeswax API connections to this Impala Daemon that have been accepted and are waiting to be setup.",
    "key" : "impala.thrift-server.beeswax-frontend.connection-setup-queue-size",
    "kind" :     0,
    "label" : "Beeswax API Connections Queued for Setup",
    "units" :     7,
  }),
  "impala.thrift-server.beeswax-frontend.connections-in-use" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of active Beeswax API connections to this Impala Daemon.",
    "key" : "impala.thrift-server.beeswax-frontend.connections-in-use",
    "kind" :     0,
    "label" : "Beeswax API Active Connections",
    "units" :     7,
  }),
  "impala.thrift-server.beeswax-frontend.total-connections" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of Beeswax API connections made to this Impala Daemon over its lifetime.",
    "key" : "impala.thrift-server.beeswax-frontend.total-connections",
    "kind" :     1,
    "label" : "Beeswax API Total Connections",
    "units" :     0,
  }),
  "impala.thrift-server.hiveserver2-frontend.connection-setup-queue-size" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of HiveServer2 API connections to this Impala Daemon that have been accepted and are waiting to be setup.",
    "key" : "impala.thrift-server.hiveserver2-frontend.connection-setup-queue-size",
    "kind" :     0,
    "label" : "HiveServer2 API Connections Queued for Setup",
    "units" :     7,
  }),
  "impala.thrift-server.hiveserver2-frontend.connections-in-use" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of active HiveServer2 API connections to this Impala Daemon.",
    "key" : "impala.thrift-server.hiveserver2-frontend.connections-in-use",
    "kind" :     0,
    "label" : "HiveServer2 API Active Connections",
    "units" :     7,
  }),
  "impala.thrift-server.hiveserver2-frontend.total-connections" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of HiveServer2 API connections made to this Impala Daemon over its lifetime.",
    "key" : "impala.thrift-server.hiveserver2-frontend.total-connections",
    "kind" :     1,
    "label" : "HiveServer2 API Total Connections",
    "units" :     0,
  }),
  "jvm.$0.committed-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Committed Usage Bytes",
    "key" : "jvm.$0.committed-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Committed Usage Bytes",
    "units" :     3,
  }),
  "jvm.$0.current-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Current Usage Bytes",
    "key" : "jvm.$0.current-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Current Usage Bytes",
    "units" :     3,
  }),
  "jvm.$0.init-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Init Usage Bytes",
    "key" : "jvm.$0.init-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Init Usage Bytes",
    "units" :     3,
  }),
  "jvm.$0.max-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Max Usage Bytes",
    "key" : "jvm.$0.max-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Max Usage Bytes",
    "units" :     3,
  }),
  "jvm.$0.peak-committed-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Peak Committed Usage Bytes",
    "key" : "jvm.$0.peak-committed-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Peak Committed Usage Bytes",
    "units" :     3,
  }),
  "jvm.$0.peak-current-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Peak Current Usage Bytes",
    "key" : "jvm.$0.peak-current-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Peak Current Usage Bytes",
    "units" :     3,
  }),
  "jvm.$0.peak-init-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Peak Init Usage Bytes",
    "key" : "jvm.$0.peak-init-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Peak Init Usage Bytes",
    "units" :     3,
  }),
  "jvm.$0.peak-max-usage-bytes" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Jvm $0 Peak Max Usage Bytes",
    "key" : "jvm.$0.peak-max-usage-bytes",
    "kind" :     0,
    "label" : "Jvm $0 Peak Max Usage Bytes",
    "units" :     3,
  }),
  "kudu-client.version" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
      "CATALOGSERVER",
      "STATESTORE",
    ],
    "description" : "A version string identifying the Kudu client",
    "key" : "kudu-client.version",
    "kind" :     2,
    "label" : "Kudu Client Version",
    "units" :     7,
  }),
  "mem-tracker.process.bytes-freed-by-last-gc" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The amount of memory freed by the last memory tracker garbage collection.",
    "key" : "mem-tracker.process.bytes-freed-by-last-gc",
    "kind" :     0,
    "label" : "MemTracker Bytes Freed By Last Garbage Collection",
    "units" :     3,
  }),
  "mem-tracker.process.bytes-over-limit" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The amount of memory by which the process was over its memory limit the last time the memory limit was encountered.",
    "key" : "mem-tracker.process.bytes-over-limit",
    "kind" :     0,
    "label" : "MemTracker Bytes Over Limit",
    "units" :     3,
  }),
  "mem-tracker.process.limit" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The process memory tracker limit.",
    "key" : "mem-tracker.process.limit",
    "kind" :     0,
    "label" : "Process Tracker Limit",
    "units" :     3,
  }),
  "mem-tracker.process.num-gcs" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The total number of garbage collections performed by the memory tracker over the life of the process.",
    "key" : "mem-tracker.process.num-gcs",
    "kind" :     1,
    "label" : "MemTracker Garbage Collections",
    "units" :     0,
  }),
  "memory.anon-huge-page-bytes" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Total bytes of anonymous (a.k.a. transparent) huge pages used by this process.",
    "key" : "memory.anon-huge-page-bytes",
    "kind" :     0,
    "label" : "Anonymous Huge Pages.",
    "units" :     3,
  }),
  "memory.mapped-bytes" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Total bytes of memory mappings in this process (the virtual memory size).",
    "key" : "memory.mapped-bytes",
    "kind" :     0,
    "label" : "Total Virtual Memory.",
    "units" :     3,
  }),
  "memory.num-maps" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Total number of memory mappings in this process.",
    "key" : "memory.num-maps",
    "kind" :     0,
    "label" : "Number of memory mappings.",
    "units" :     7,
  }),
  "memory.rss" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Resident set size (RSS) of this process, including TCMalloc, buffer pool and Jvm.",
    "key" : "memory.rss",
    "kind" :     0,
    "label" : "Resident set size.",
    "units" :     3,
  }),
  "memory.thp.defrag" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The system-wide 'defrag' setting for Transparent Huge Pages.",
    "key" : "memory.thp.defrag",
    "kind" :     2,
    "label" : "Transparent Huge Pages Defrag Enabled.",
    "units" :     7,
  }),
  "memory.thp.enabled" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The system-wide 'enabled' setting for Transparent Huge Pages.",
    "key" : "memory.thp.enabled",
    "kind" :     2,
    "label" : "Transparent Huge Pages Enabled.",
    "units" :     7,
  }),
  "memory.thp.khugepaged-defrag" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The system-wide 'defrag' setting for khugepaged.",
    "key" : "memory.thp.khugepaged-defrag",
    "kind" :     2,
    "label" : "Khugepaged Defrag Enabled.",
    "units" :     7,
  }),
  "memory.total-used" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Total memory currently used by TCMalloc and buffer pool.",
    "key" : "memory.total-used",
    "kind" :     0,
    "label" : "Total Used Memory.",
    "units" :     3,
  }),
  "process-start-time" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
      "CATALOGSERVER",
      "STATESTORE",
    ],
    "description" : "The local start time of the process",
    "key" : "process-start-time",
    "kind" :     2,
    "label" : "Process Start Time",
    "units" :     7,
  }),
  "request-pool-service.resolve-pool-duration-ms" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Time (ms) spent resolving request request pools.",
    "key" : "request-pool-service.resolve-pool-duration-ms",
    "kind" :     3,
    "label" : "Request Pool Service Resolve Pool Duration Ms",
    "units" :     8,
  }),
  "rpc-method.$0.call_duration" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "STATESTORE",
      "IMPALAD",
    ],
    "description" : "Duration (ms) of RPC calls to $0",
    "key" : "rpc-method.$0.call_duration",
    "kind" :     5,
    "label" : "$0 RPC Call Duration",
    "units" :     8,
  }),
  "sanitizer-total-bytes-allocated" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Bytes allocated from the sanitizer malloc (Sanitizer debug builds only)",
    "key" : "sanitizer-total-bytes-allocated",
    "kind" :     0,
    "label" : "Sanitizer Malloc Bytes Allocated",
    "units" :     3,
  }),
  "senders-blocked-on-recvr-creation" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of senders waiting for receiving fragment to initialize",
    "key" : "senders-blocked-on-recvr-creation",
    "kind" :     0,
    "label" : "Number of senders waiting for receiving fragment to initialize.",
    "units" :     7,
  }),
  "simple-scheduler.assignments.total" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of assignments",
    "key" : "simple-scheduler.assignments.total",
    "kind" :     1,
    "label" : "Assignments",
    "units" :     0,
  }),
  "simple-scheduler.initialized" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Indicates whether the scheduler has been initialized.",
    "key" : "simple-scheduler.initialized",
    "kind" :     2,
    "label" : "Simple Scheduler Initialized",
    "units" :     7,
  }),
  "simple-scheduler.local-assignments.total" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Number of assignments operating on local data",
    "key" : "simple-scheduler.local-assignments.total",
    "kind" :     1,
    "label" : "Local Assignments",
    "units" :     0,
  }),
  "simple-scheduler.num-backends" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of backend connections from this Impala Daemon to other Impala Daemons.",
    "key" : "simple-scheduler.num-backends",
    "kind" :     0,
    "label" : "Backend Connections",
    "units" :     7,
  }),
  "statestore-subscriber.connected" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Whether the Impala Daemon considers itself connected to the StateStore.",
    "key" : "statestore-subscriber.connected",
    "kind" :     2,
    "label" : "StateStore Connectivity",
    "units" :     7,
  }),
  "statestore-subscriber.heartbeat-interval-time" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The time (sec) between Statestore heartbeats.",
    "key" : "statestore-subscriber.heartbeat-interval-time",
    "kind" :     3,
    "label" : "Statestore Subscriber Heartbeat Interval Time",
    "units" :     9,
  }),
  "statestore-subscriber.last-recovery-duration" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The amount of time the StateStore subscriber took to recover the connection the last time it was lost.",
    "key" : "statestore-subscriber.last-recovery-duration",
    "kind" :     0,
    "label" : "StateStore Subscriber Last Recovery Duration",
    "units" :     7,
  }),
  "statestore-subscriber.last-recovery-time" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The local time that the last statestore recovery happened.",
    "key" : "statestore-subscriber.last-recovery-time",
    "kind" :     2,
    "label" : "Statestore Subscriber Last Recovery Time",
    "units" :     7,
  }),
  "statestore-subscriber.registration-id" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The most recent registration ID for this subscriber with the statestore. Set to 'N/A' if no registration has been completed",
    "key" : "statestore-subscriber.registration-id",
    "kind" :     2,
    "label" : "Statestore Subscriber Registration Id",
    "units" :     7,
  }),
  "statestore-subscriber.statestore.client-cache.clients-in-use" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The number of active StateStore subscriber clients in this Impala Daemon's client cache. These clients are for communication from this role to the StateStore.",
    "key" : "statestore-subscriber.statestore.client-cache.clients-in-use",
    "kind" :     0,
    "label" : "StateStore Subscriber Active Clients",
    "units" :     7,
  }),
  "statestore-subscriber.statestore.client-cache.total-clients" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The total number of StateStore subscriber clients in this Impala Daemon's client cache. These clients are for communication from this role to the StateStore.",
    "key" : "statestore-subscriber.statestore.client-cache.total-clients",
    "kind" :     0,
    "label" : "StateStore Subscriber Total Clients",
    "units" :     7,
  }),
  "statestore-subscriber.topic-$0.processing-time-s" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Statestore Subscriber Topic $0 Processing Time",
    "key" : "statestore-subscriber.topic-$0.processing-time-s",
    "kind" :     3,
    "label" : "Statestore Subscriber Topic $0 Processing Time",
    "units" :     9,
  }),
  "statestore-subscriber.topic-update-duration" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The time (sec) taken to process Statestore subcriber topic updates.",
    "key" : "statestore-subscriber.topic-update-duration",
    "kind" :     3,
    "label" : "Statestore Subscriber Topic Update Duration",
    "units" :     9,
  }),
  "statestore-subscriber.topic-update-interval-time" : TMetricDef(**{
    "contexts" : [
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The time (sec) between Statestore subscriber topic updates.",
    "key" : "statestore-subscriber.topic-update-interval-time",
    "kind" :     3,
    "label" : "Statestore Subscriber Topic Update Interval Time",
    "units" :     9,
  }),
  "statestore.heartbeat-durations" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The time (sec) spent sending heartbeat RPCs. Includes subscriber-side processing time and network transmission time.",
    "key" : "statestore.heartbeat-durations",
    "kind" :     3,
    "label" : "Statestore Heartbeat Durations",
    "units" :     9,
  }),
  "statestore.live-backends" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The number of registered Statestore subscribers.",
    "key" : "statestore.live-backends",
    "kind" :     0,
    "label" : "Statestore Live Backends",
    "units" :     7,
  }),
  "statestore.live-backends.list" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The set of all live Statestore subscribers.",
    "key" : "statestore.live-backends.list",
    "kind" :     4,
    "label" : "Statestore Live Backends List",
    "units" :     7,
  }),
  "statestore.topic-update-durations" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The time (sec) spent sending topic update RPCs. Includes subscriber-side processing time and network transmission time.",
    "key" : "statestore.topic-update-durations",
    "kind" :     3,
    "label" : "Statestore Topic Update Durations",
    "units" :     9,
  }),
  "statestore.total-key-size-bytes" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The sum of the size of all keys for all topics tracked by the StateStore.",
    "key" : "statestore.total-key-size-bytes",
    "kind" :     0,
    "label" : "Topic Key Size",
    "units" :     7,
  }),
  "statestore.total-topic-size-bytes" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The sum of the size of all keys and all values for all topics tracked by the StateStore.",
    "key" : "statestore.total-topic-size-bytes",
    "kind" :     0,
    "label" : "Topic Size",
    "units" :     7,
  }),
  "statestore.total-value-size-bytes" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The sum of the size of all values for all topics tracked by the StateStore.",
    "key" : "statestore.total-value-size-bytes",
    "kind" :     0,
    "label" : "Topic Value Size",
    "units" :     7,
  }),
  "statestore.version" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The full version string of the Statestore Server.",
    "key" : "statestore.version",
    "kind" :     2,
    "label" : "Statestore Version",
    "units" :     7,
  }),
  "subscriber-heartbeat.client-cache.clients-in-use" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The number of clients in use by the Statestore heartbeat client cache.",
    "key" : "subscriber-heartbeat.client-cache.clients-in-use",
    "kind" :     0,
    "label" : "Subscriber Heartbeat Client Cache Clients In Use",
    "units" :     7,
  }),
  "subscriber-heartbeat.client-cache.total-clients" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The total number of clients in the Statestore heartbeat client cache.",
    "key" : "subscriber-heartbeat.client-cache.total-clients",
    "kind" :     0,
    "label" : "Subscriber Heartbeat Client Cache Total Clients",
    "units" :     7,
  }),
  "subscriber-update-state.client-cache.clients-in-use" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The number of clients in use by the Statestore update state client cache.",
    "key" : "subscriber-update-state.client-cache.clients-in-use",
    "kind" :     0,
    "label" : "Subscriber Update State Client Cache Clients In Use",
    "units" :     7,
  }),
  "subscriber-update-state.client-cache.total-clients" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
    ],
    "description" : "The total number of clients in the Statestore update state client cache.",
    "key" : "subscriber-update-state.client-cache.total-clients",
    "kind" :     0,
    "label" : "Subscriber Update State Client Cache Total Clients",
    "units" :     7,
  }),
  "tcmalloc.bytes-in-use" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Number of bytes used by the application. This will not typically match the memory use reported by the OS, because it does not include TCMalloc overhead or memory fragmentation.",
    "key" : "tcmalloc.bytes-in-use",
    "kind" :     0,
    "label" : "TCMalloc Bytes in Use",
    "units" :     3,
  }),
  "tcmalloc.pageheap-free-bytes" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Number of bytes in free, mapped pages in page heap. These bytes can be used to fulfill allocation requests. They always count towards virtual memory usage, and unless the underlying memory is swapped out by the OS, they also count towards physical memory usage.",
    "key" : "tcmalloc.pageheap-free-bytes",
    "kind" :     0,
    "label" : "TCMalloc Pageheap Free",
    "units" :     3,
  }),
  "tcmalloc.pageheap-unmapped-bytes" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Number of bytes in free, unmapped pages in page heap. These are bytes that have been released back to the OS, possibly by one of the MallocExtension \"Release\" calls. They can be used to fulfill allocation requests, but typically incur a page fault. They always count towards virtual memory usage, and depending on the OS, typically do not count towards physical memory usage.",
    "key" : "tcmalloc.pageheap-unmapped-bytes",
    "kind" :     0,
    "label" : "TCMalloc Pageheap Unmapped",
    "units" :     3,
  }),
  "tcmalloc.physical-bytes-reserved" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Derived metric computing the amount of physical memory (in bytes) used by the process, including that actually in use and free bytes reserved by tcmalloc. Does not include the tcmalloc metadata.",
    "key" : "tcmalloc.physical-bytes-reserved",
    "kind" :     0,
    "label" : "TCMalloc Physical Bytes Reserved",
    "units" :     3,
  }),
  "tcmalloc.total-bytes-reserved" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Bytes of system memory reserved by TCMalloc.",
    "key" : "tcmalloc.total-bytes-reserved",
    "kind" :     0,
    "label" : "TCMalloc Total Bytes Reserved",
    "units" :     3,
  }),
  "thread-manager.running-threads" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "The number of running threads in this process.",
    "key" : "thread-manager.running-threads",
    "kind" :     0,
    "label" : "Running Threads",
    "units" :     7,
  }),
  "thread-manager.total-threads-created" : TMetricDef(**{
    "contexts" : [
      "STATESTORE",
      "CATALOGSERVER",
      "IMPALAD",
    ],
    "description" : "Threads created over the lifetime of the process.",
    "key" : "thread-manager.total-threads-created",
    "kind" :     0,
    "label" : "Threads Created",
    "units" :     7,
  }),
  "tmp-file-mgr.active-scratch-dirs" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The number of active scratch directories for spilling to disk.",
    "key" : "tmp-file-mgr.active-scratch-dirs",
    "kind" :     0,
    "label" : "Active scratch directories",
    "units" :     7,
  }),
  "tmp-file-mgr.active-scratch-dirs.list" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "The set of all active scratch directories for spilling to disk.",
    "key" : "tmp-file-mgr.active-scratch-dirs.list",
    "kind" :     4,
    "label" : "Active scratch directories list",
    "units" :     7,
  }),
  "total-senders-blocked-on-recvr-creation" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of senders that have been blocked waiting for receiving fragment to initialize.",
    "key" : "total-senders-blocked-on-recvr-creation",
    "kind" :     1,
    "label" : "Total senders waiting for receiving fragment to initialize",
    "units" :     7,
  }),
  "total-senders-timedout-waiting-for-recvr-creation" : TMetricDef(**{
    "contexts" : [
      "IMPALAD",
    ],
    "description" : "Total number of senders that timed-out waiting for receiving fragment to initialize.",
    "key" : "total-senders-timedout-waiting-for-recvr-creation",
    "kind" :     1,
    "label" : "Total senders timed-out waiting for receiving fragment to initialize",
    "units" :     7,
  }),
}
